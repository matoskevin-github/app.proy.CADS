CREATE DATABASE BDPDM41
GO

USE BDPDM41
GO

------------------------------------------------------------
CREATE TABLE PDMLOGIN(
idLogin int primary key identity,
Usuario varchar(30),
Contraseña varchar(30),
TipoUsuario int,
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMCARGO(
idCargo int primary key identity,
idLogin int references PDMLOGIN(idLogin),
Detalle varchar(30),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMRESPONSABLE(
idResponsable int primary key identity,
Nombres varchar(50),
Apellidos varchar(50),
DNI char(8),
Direccion varchar (100),
Correo varchar(100),
Celular char(9),
EstadoCivil varchar(20),
FechaNacimiento date,
idCargo int references PDMCARGO(idCargo),
idLogin int references PDMLOGIN(idLogin),
Condicion varchar(20),
FechaIngreso date,
Estado int,
FechaIngresoR Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMENTIDAD(
idEntidad int primary key identity,
idLogin int references PDMLOGIN(idLogin),
Detalle varchar (300),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

------------------------------------------------------------

CREATE TABLE PDMPISOS(
idPisos int primary key identity,
idLogin int references PDMLOGIN(idLogin),
NomPiso varchar (20),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMPABELLON(
idPabellon int primary key identity ,
idLogin int references PDMLOGIN(idLogin),
NomPabellon varchar (50),
CantPisos int,
CantAmbientes int,
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMAMBIENTE(
idAmbiente int primary key identity,
Detalle varchar(100),
idPabellon int references PDMPABELLON(idPabellon),
idPisos int references PDMPISOS(idPisos),
idLogin int references PDMLOGIN(idLogin),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMAMBIENTEXRESPONSABLE(
idAmbienteResponsable int primary key identity,
idAmbiente int references PDMAMBIENTE(idAmbiente),
idResponsable int references PDMRESPONSABLE(idResponsable),
idLogin int references PDMLOGIN(idLogin),
FechaIngreso Datetime,
FechaModificacion Datetime
)
SELECT * FROM PDMAMBIENTEXRESPONSABLE
------------------------------------------------------------

CREATE TABLE PDMCONDICION(
idCondicion int primary key identity,
Detalle varchar(50),
idLogin int references PDMLOGIN(idLogin),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMCONSERVACION(
idConservacion int primary key identity,
Detalle varchar(50),
idLogin int references PDMLOGIN(idLogin),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMDOCUMENTO(
idDocumento int primary key identity,
Detalle varchar(50),
idLogin int references PDMLOGIN(idLogin),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMGRUPOGENERICO(
idGrupoGenerico int primary key identity,
Codigo varchar(50),
Detalle varchar(50),
idLogin int references PDMLOGIN(idLogin),
Estado int,
FechaIngreso datetime,
FechaModificacion datetime
)

CREATE TABLE PDMCAJA(
idCaja int primary key identity,
Detalle varchar(50),
idLogin int references PDMLOGIN(idLogin),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMNIVELESTADO(
idNivelEstado int primary key identity,
Detalle varchar(50),
idLogin int references PDMLOGIN(idLogin),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

CREATE TABLE PDMFORMAADQUISICION(
idFormaAdquisicion int primary key identity,
Detalle varchar(50),
idLogin int references PDMLOGIN(idLogin),
Estado int,
FechaIngreso Datetime,
FechaModificacion Datetime
)

---------------------------------------------------

CREATE TABLE PDMARTICULOS(
idArticulo int primary key identity,
Codigo varchar(300),
Detalle varchar(300),
idEntidad int references PDMENTIDAD(idEntidad),
idGrupoGenerico int references PDMGRUPOGENERICO(idGrupoGenerico),
idDocumento int references PDMDOCUMENTO(idDocumento),
idCaja int references PDMCAJA(idCaja),
idFormaAdquisicion int references PDMFormaAdquisicion(idFormaAdquisicion),
idConservacion int references PDMCONSERVACION(idConservacion),
idNivelEstado int references PDMNIVELESTADO(idNivelEstado),
idCondicion int references PDMCONDICION(idCondicion),
FechaAlta datetime,
fechaBaja datetime,
idAmbiente int references PDMAMBIENTE(idAmbiente),
PrecioUnitario int,
PrecioCIGV int,
PrecioSIGv int,
idLogin int references PDMLOGIN(idLogin),
Modelo varchar(100),
Material varchar(100),
Motor varchar(100),
Marca varchar(100),
Serie varchar(100),
Color varchar(100),
Alto varchar(30),
Ancho varchar(30),
Largo varchar(30),
Diametro varchar(30),
Generacion varchar(100),
UnidadMedidad varchar(100),
Socket varchar(100),
Nucleos varchar (100),
Capacidad varchar(100),
Salidad varchar(100),
Frecuencia varchar(100),
Tipo varchar(100),
Observaciones varchar(700),
FechaIngreso datetime,
FechaModificacion datetime
)

INSERT INTO PDMLOGIN values ('LALBERTO','70048047',1,1,'08/01/2019','08/01/2019')
INSERT INTO PDMCARGO values (1,'LOGISTICA',1,'08/12/2019','08/12/2019')
INSERT INTO PDMRESPONSABLE values ('LUIS ALBERTO', 'QUESADA PALACIOS','70048047','MZ. F LT. 10 LOS OLIVOS DE PRO','LUISQUESADA.P95@GMAIL.COM',
'944493862','SOLTERO(a)','12/05/1995',1,1,'INTERNO','01/05/2018',1,'10/01/2019','10/01/2019')

--PROCEDURES PARA CONDICION--

GO
CREATE PROCEDURE SP_SEL_LISTARCONDICION
AS
BEGIN
SELECT PDMCONDICION.idCondicion as 'Codigo',PDMCONDICION.Detalle AS 'Condicion',(CASE PDMCONDICION.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMCONDICION ORDER BY PDMCONDICION.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerCondicion
@Detalle varchar(300)
AS
BEGIN
SELECT PDMCONDICION.idCondicion as 'Codigo',PDMCONDICION.Detalle AS 'Condicion',(CASE PDMCONDICION.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMCONDICION
where  PDMCONDICION.Detalle LIKE  @Detalle + '%' ORDER BY PDMCONDICION.Detalle ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARCONDICION
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMCONDICION(idLogin,Detalle,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARCONDICION
@idCondicion INT,
@IDLogin INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMCONDICION
SET idLogin = @IDLogin, Estado = @ESTADO ,Detalle = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idCondicion = @idCondicion
END
GO

--PROCEDURES PARA LOGIN--
GO
CREATE PROCEDURE SP_SEL_INICIO_SESION
@USUARIO VARCHAR(30),
@CONTRASEÑA VARCHAR (30)
AS
BEGIN
SELECT COUNT (PDMLOGIN.Usuario) 'EXISTE' FROM PDMLOGIN
WHERE PDMLOGIN.Usuario = @USUARIO AND PDMLOGIN.Contraseña = @CONTRASEÑA AND PDMLOGIN.Estado = 1
END
GO

GO
CREATE PROCEDURE SP_SEL_OBTENERINFOUSUARIO
@USUARIO VARCHAR(30)
AS
BEGIN
SELECT PDMRESPONSABLE.idLogin, PDMRESPONSABLE.Nombres, PDMRESPONSABLE.Apellidos , PDMLOGIN.TipoUsuario, PDMRESPONSABLE.idResponsable
FROM PDMLOGIN INNER JOIN PDMRESPONSABLE ON PDMLOGIN.idLogin = PDMRESPONSABLE.idLogin
WHERE PDMLOGIN.Usuario = @USUARIO
END
GO

--PROCEDURES PABELLON--
GO
CREATE PROCEDURE SP_SEL_LISTARPABELLONES
AS
BEGIN
SELECT PDMPABELLON.idPabellon as 'Codigo',PDMPABELLON.NomPabellon AS 'Pabellon',PDMPABELLON.CantPisos AS 'Pisos', PDMPABELLON.CantAmbientes  AS 'Ambientes',(CASE PDMPABELLON.Estado   
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMPABELLON ORDER BY PDMPABELLON.NomPabellon ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerPabellon
@NomPabellon varchar(300)
AS
BEGIN
SELECT PDMPABELLON.idPabellon as 'Codigo',PDMPABELLON.NomPabellon AS 'Pabellon',PDMPABELLON.CantPisos AS 'Pisos', PDMPABELLON.CantAmbientes  AS 'Ambientes',(CASE PDMPABELLON.Estado   
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado
FROM PDMPABELLON
where  PDMPABELLON.NomPabellon LIKE  @NomPabellon + '%' ORDER BY PDMPABELLON.NomPabellon ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARPABELLON
@IDLOGIN INT,
@NOMPABELLON VARCHAR(300),
@CANTPISOS INT,
@CANTAMBIENTE INT,
@ESTADO INT,
@FECHAINGRESO Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMPABELLON(idLogin,NomPabellon,CantPisos,CantAmbientes,Estado,FechaIngreso,FechaModificacion) 
VALUES (@IDLOGIN,@NOMPABELLON,@CANTPISOS,@CANTAMBIENTE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARPABELLON
@IDPABELLON INT,
@IDLOGIN INT,
@NOMPABELLON VARCHAR(300),
@CANTPISOS INT,
@CANTAMBIENTE INT,
@ESTADO INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMPABELLON
SET idLogin = @IDLOGIN, NomPabellon = @NOMPABELLON, CantPisos = @CANTPISOS, CantAmbientes = @CANTAMBIENTE, Estado = @ESTADO,
FechaModificacion = @FECHAMODIFICACION
WHERE idPabellon = @IDPABELLON
END
GO

--PROCEDURES PARA ENTIDAD--
GO
CREATE PROCEDURE SP_SEL_LISTARENTIDADES
AS
BEGIN
SELECT PDMENTIDAD.idEntidad as 'Codigo',PDMENTIDAD.Detalle AS 'Entidad',(CASE PDMENTIDAD.Estado   
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMENTIDAD ORDER BY PDMENTIDAD.Detalle ASC 
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerENTIDADES
@Detalle varchar(300)
AS
BEGIN
SELECT PDMENTIDAD.idEntidad as 'Codigo',PDMENTIDAD.Detalle AS 'Entidad',(CASE PDMENTIDAD.Estado   
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado
FROM PDMENTIDAD
where  PDMENTIDAD.Detalle LIKE @Detalle + '%' ORDER BY PDMENTIDAD.Detalle ASC 
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARENTIDAD
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMENTIDAD (iDLogin,Detalle,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARENTIDAD
@idEntidad INT,
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMENTIDAD
SET idLogin = @IDLOGIN, Estado = @ESTADO ,Detalle = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idEntidad = @idEntidad
END
GO

--PROCEDURES CARGO--
GO
CREATE PROCEDURE SP_SEL_LISTARCARGO
AS
BEGIN
SELECT PDMCARGO.idCargo as 'Codigo',PDMCARGO.Detalle AS 'Cargo',(CASE PDMCARGO.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMCARGO ORDER BY PDMCARGO.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerCargo
@Detalle varchar(300)
AS
BEGIN
SELECT PDMCARGO.idCargo as 'Codigo',PDMCARGO.Detalle AS 'Cargo',(CASE PDMCARGO.Estado   
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado
FROM PDMCARGO
where  PDMCARGO.Detalle LIKE  @Detalle + '%' ORDER BY PDMCARGO.Detalle ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARCARGO
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMCARGO(idLogin,Detalle,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARCARGO
@idCargo INT,
@IDLogin INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMCARGO
SET idLogin = @IDLogin, Estado = @ESTADO ,Detalle = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idCargo = @idCargo
END
GO

--PROCEDURES PISOS
GO
CREATE PROCEDURE SP_SEL_LISTARPISOS
AS
BEGIN
SELECT PDMPISOS.idPisos as 'Codigo',PDMPISOS.NomPiso AS 'Piso',(CASE PDMPISOS.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMPISOS ORDER BY PDMPISOS.NomPiso ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerPisos
@Detalle varchar(300)
AS
BEGIN
SELECT PDMPISOS.idPisos as 'Codigo',PDMPISOS.NomPiso AS 'Piso',(CASE PDMPISOS.Estado   
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado
FROM PDMPISOS
where  PDMPISOS.NomPiso LIKE  @Detalle + '%' ORDER BY PDMPISOS.NomPiso ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARPISOS
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMPISOS(idLogin,NomPiso,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARPISOS
@idPisos INT,
@IDLogin INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMPISOS
SET idLogin = @IDLogin, Estado = @ESTADO ,NomPiso = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idPisos = @idPisos
END
GO

--PROCEDURES AMBIENTES
GO
CREATE PROCEDURE SP_SEL_LISTARAMBIENTES
AS
BEGIN
SELECT PDMAMBIENTE.idAmbiente as 'Codigo',PDMAMBIENTE.Detalle AS 'Piso',PDMPABELLON.NomPabellon 'Pabellon',PDMPISOS.NomPiso 'Piso',
		(CASE PDMAMBIENTE.Estado WHEN 1 THEN 'ACTIVO' WHEN 0 THEN 'INACTIVO' ELSE 'X' END ) Estado 
FROM PDMAMBIENTE inner join PDMPABELLON ON PDMAMBIENTE.idPabellon = PDMPABELLON.idPabellon 
INNER JOIN PDMPISOS ON PDMAMBIENTE.idPisos = PDMPISOS.idPisos ORDER BY PDMAMBIENTE.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerAmbientes
@Detalle varchar(300)
AS
BEGIN
SELECT PDMAMBIENTE.idAmbiente as 'Codigo',PDMAMBIENTE.Detalle AS 'Piso',PDMPABELLON.NomPabellon 'Pabellon',PDMPISOS.NomPiso 'Piso',
		(CASE PDMAMBIENTE.Estado WHEN 1 THEN 'ACTIVO' WHEN 0 THEN 'INACTIVO' ELSE 'X' END ) Estado 
FROM PDMAMBIENTE inner join PDMPABELLON ON PDMAMBIENTE.idPabellon = PDMPABELLON.idPabellon 
INNER JOIN PDMPISOS ON PDMAMBIENTE.idPisos = PDMPISOS.idPisos
where  PDMAMBIENTE.Detalle LIKE  @Detalle + '%' ORDER BY PDMAMBIENTE.Detalle ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARAMBIENTES
@DETALLE VARCHAR(100),
@IDPABELLON INT,
@IDPISOS INT,
@IDLOGIN INT,
@ESTADO INT,
@FECHAINGRESO Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMAMBIENTE(Detalle,idPabellon,idPisos,idLogin,Estado,FechaIngreso,FechaModificacion) VALUES 
(@DETALLE,@IDPABELLON,@IDPISOS,@IDLOGIN,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARAMBIENTES
@IDAMBIENTE INT,
@DETALLE VARCHAR(300),
@IDPABELLON INT,
@IDPISOS INT,
@IDLogin INT,
@ESTADO INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMAMBIENTE
SET Detalle = @DETALLE, idPabellon = @IDPABELLON, idPisos = @IDPISOS, idLogin = @IDLogin, Estado = @ESTADO, FechaModificacion = @FECHAMODIFICACION
WHERE idAmbiente = @IDAMBIENTE
END
GO

GO
CREATE PROCEDURE SP_SEL_LPABELLONES
AS
BEGIN
SELECT idPabellon, NomPabellon
FROM PDMPABELLON
WHERE Estado = 1
END
GO

GO
CREATE PROCEDURE SP_SEL_LPISOS
AS
BEGIN
SELECT idPisos, NomPiso 
FROM PDMPISOS
WHERE ESTADO = 1
END
GO

--PROCEDURES RESPONSABLE

GO
CREATE PROCEDURE SP_SEL_LISTAR_RESPONSABLES
AS
BEGIN
SELECT PDMRESPONSABLE.idResponsable 'Codigo',PDMRESPONSABLE.Apellidos, PDMRESPONSABLE.Nombres, PDMRESPONSABLE.DNI, PDMRESPONSABLE.Direccion, PDMRESPONSABLE.Correo,
PDMRESPONSABLE.Celular, PDMRESPONSABLE.EstadoCivil, PDMRESPONSABLE.FechaNacimiento 'Fecha Nacimiento', PDMCARGO.Detalle 'Cargo',
PDMRESPONSABLE.Condicion, PDMRESPONSABLE.FechaIngreso 'Fecha Ingreso',
		(CASE PDMRESPONSABLE.Estado WHEN 1 THEN 'ACTIVO' WHEN 0 THEN 'INACTIVO' ELSE 'X' END ) Estado 
FROM PDMRESPONSABLE inner join PDMCARGO ON PDMRESPONSABLE.idCargo = PDMCARGO.idCargo ORDER BY PDMRESPONSABLE.Apellidos ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_Obtener_Responsable
@Detalle varchar(300)
AS
BEGIN
SELECT PDMRESPONSABLE.idResponsable 'Codigo',PDMRESPONSABLE.Apellidos, PDMRESPONSABLE.Nombres, PDMRESPONSABLE.DNI, PDMRESPONSABLE.Direccion, PDMRESPONSABLE.Correo,
PDMRESPONSABLE.Celular, PDMRESPONSABLE.EstadoCivil, PDMRESPONSABLE.FechaNacimiento 'Fecha Nacimiento', PDMCARGO.Detalle 'Cargo',
PDMRESPONSABLE.Condicion, PDMRESPONSABLE.FechaIngreso 'Fecha Ingreso',
		(CASE PDMRESPONSABLE.Estado WHEN 1 THEN 'ACTIVO' WHEN 0 THEN 'INACTIVO' ELSE 'X' END ) Estado 
FROM PDMRESPONSABLE inner join PDMCARGO ON PDMRESPONSABLE.idCargo = PDMCARGO.idCargo
where  PDMRESPONSABLE.Apellidos LIKE  @Detalle + '%' OR PDMRESPONSABLE.Nombres LIKE @Detalle + '%' ORDER BY PDMRESPONSABLE.Apellidos ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTAR_RESPONSABLE
@NOMBRES VARCHAR(100),
@APELLIDOS VARCHAR(100),
@DNI CHAR(8),
@DIRECCION VARCHAR(100),
@CORREO VARCHAR(100),
@CELULAR CHAR(9),
@ESTADOCIVIL VARCHAR(20),
@FECHANACIMIENTO DATE,
@IDCARGO INT,
@IDLOGIN INT,
@CONDICION VARCHAR(20),
@FECHAINGRESO DATE,
@ESTADO INT,
@FECHAINGRESOR Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMRESPONSABLE(Nombres,Apellidos,DNI,Direccion,Correo,Celular,EstadoCivil,FechaNacimiento,idCargo,idLogin,Condicion,FechaIngreso, Estado,FechaIngresoR,FechaModificacion) VALUES 
(@NOMBRES,@APELLIDOS,@DNI,@DIRECCION,@CORREO,@CELULAR,@ESTADOCIVIL,@FECHANACIMIENTO,@IDCARGO,@IDLOGIN,@CONDICION,@FECHAINGRESO,@ESTADO,@FECHAINGRESOR,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZAR_RESPONSABLE
@IDRESPONSABLE INT,
@NOMBRES VARCHAR(100),
@APELLIDOS VARCHAR(100),
@DNI CHAR(8),
@DIRECCION VARCHAR(100),
@CORREO VARCHAR(100),
@CELULAR CHAR(9),
@ESTADOCIVIL VARCHAR(20),
@FECHANACIMIENTO DATE,
@IDCARGO INT,
@IDLOGIN INT,
@CONDICION VARCHAR(20),
@FECHAINGRESO DATE,
@ESTADO INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMRESPONSABLE
SET Nombres = @NOMBRES,Apellidos=@APELLIDOS,DNI = @DNI,Direccion=@DIRECCION,Correo=@CORREO,Celular=@CELULAR,EstadoCivil=@ESTADOCIVIL,FechaNacimiento=@FECHANACIMIENTO,idCargo=@IDCARGO,idLogin=@IDLOGIN,Condicion=@CONDICION,
FechaIngreso=@FECHAINGRESO, Estado=@ESTADO,FechaModificacion=@FECHAMODIFICACION
WHERE idResponsable = @IDRESPONSABLE
END
GO

GO
CREATE PROCEDURE SP_SEL_LCARGOS
AS
BEGIN
SELECT idCargo, Detalle 
FROM PDMCARGO
WHERE ESTADO = 1 ORDER BY PDMCARGO.Detalle
END
GO

GO
CREATE PROCEDURE SP_SEL_LOBTENERCARGO
@DETALLE VARCHAR(50)
AS
BEGIN
SELECT idCargo, Detalle 
FROM PDMCARGO
WHERE ESTADO = 1 AND PDMCARGO.Detalle LIKE @DETALLE + '%' ORDER BY PDMCARGO.Detalle
END
GO

--PROCEDURES ASIGNACION DEAMBIENTES

GO
CREATE PROCEDURE SP_SEL_LISTA_LAMBIENTES
AS
BEGIN
SELECT PDMAMBIENTE.idAmbiente as 'Codigo',PDMAMBIENTE.Detalle AS 'Ambiente',PDMPABELLON.NomPabellon 'Pabellon',PDMPISOS.NomPiso 'Piso' 
FROM PDMAMBIENTE inner join PDMPABELLON ON PDMAMBIENTE.idPabellon = PDMPABELLON.idPabellon 
INNER JOIN PDMPISOS ON PDMAMBIENTE.idPisos = PDMPISOS.idPisos 
where PDMAMBIENTE.Estado=1 ORDER BY PDMAMBIENTE.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_OBTENER_LAMBIENTES
@Detalle varchar(300)
AS
BEGIN
SELECT PDMAMBIENTE.idAmbiente as 'Codigo',PDMAMBIENTE.Detalle AS 'Ambiente',PDMPABELLON.NomPabellon 'Pabellon',PDMPISOS.NomPiso 'Piso' 
FROM PDMAMBIENTE inner join PDMPABELLON ON PDMAMBIENTE.idPabellon = PDMPABELLON.idPabellon 
INNER JOIN PDMPISOS ON PDMAMBIENTE.idPisos = PDMPISOS.idPisos
where  PDMAMBIENTE.Detalle LIKE  @Detalle + '%' AND PDMAMBIENTE.Estado=1 ORDER BY PDMAMBIENTE.Detalle ASC
end
GO

GO
create PROCEDURE SP_SEL_OBTENER_LRESPONSABLE
AS
BEGIN
SELECT PDMRESPONSABLE.Apellidos+ ' ' +PDMRESPONSABLE.Nombres + ' | COD:' +
	   CONVERT(varchar(10),PDMRESPONSABLE.idResponsable )  as 'RESPONSABLE'
FROM PDMRESPONSABLE inner join PDMCARGO ON PDMRESPONSABLE.idCargo = PDMCARGO.idCargo
where PDMRESPONSABLE.Estado=1 ORDER BY PDMRESPONSABLE.Apellidos ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INGRESAR_AMBIENTE_RESPONSABLE
@IDAMBIENTE INT,
@IDRESPONSABLE INT,
@IDLOGIN INT,
@FECHAINGRESO Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMAMBIENTEXRESPONSABLE(idAmbiente,idResponsable,idLogin,FechaIngreso,FechaModificacion) VALUES
(@IDAMBIENTE,@IDRESPONSABLE,@IDLOGIN,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZAR_AMBIENTE_RESPONSABLE
@IDAMBIENTERESPONSABLE INT,
@IDAMBIENTE INT,
@IDRESPONSABLE INT,
@IDLOGIN INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMAMBIENTEXRESPONSABLE
SET idAmbiente = @IDAMBIENTE, idResponsable=@IDRESPONSABLE,idLogin=@IDLOGIN,FechaModificacion = @FECHAMODIFICACION
WHERE idAmbienteResponsable = @IDAMBIENTERESPONSABLE
END
GO

GO
CREATE PROCEDURE SP_SEL_OBTENER_AMBIENTE_RESPONSABLE
@IDRESPONSABLE INT
AS
BEGIN
SELECT PDMAMBIENTE.idAmbiente 'Codigo', PDMRESPONSABLE.Apellidos+ ' '+ PDMRESPONSABLE.Nombres AS 'Responsable',PDMAMBIENTE.Detalle 'Ambiente', PDMPABELLON.NomPabellon 'Pabellon', PDMPISOS.NomPiso 'Piso'
FROM PDMAMBIENTEXRESPONSABLE INNER JOIN PDMRESPONSABLE ON PDMAMBIENTEXRESPONSABLE.idResponsable = PDMRESPONSABLE.idResponsable
INNER JOIN PDMAMBIENTE ON PDMAMBIENTEXRESPONSABLE.idAmbiente = PDMAMBIENTE.idAmbiente
INNER JOIN PDMPABELLON ON PDMAMBIENTE.idPabellon = PDMPABELLON.idPabellon 
INNER JOIN PDMPISOS ON PDMAMBIENTE.idPisos = PDMPISOS.idPisos
WHERE PDMAMBIENTEXRESPONSABLE.idResponsable = @IDRESPONSABLE
END
GO


--PROCEDURES CONSERVACION

GO
CREATE PROCEDURE SP_SEL_LISTARCONSERVACION
AS
BEGIN
SELECT PDMCONSERVACION.idConservacion as 'Codigo',PDMCONSERVACION.Detalle AS 'Conservacion',(CASE PDMCONSERVACION.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMCONSERVACION ORDER BY PDMCONSERVACION.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerConservacion
@Detalle varchar(300)
AS
BEGIN
SELECT PDMCONSERVACION.idConservacion as 'Codigo',PDMCONSERVACION.Detalle AS 'Conservacion',(CASE PDMCONSERVACION.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMCONSERVACION
where  PDMCONSERVACION.Detalle LIKE  @Detalle + '%' ORDER BY PDMCONSERVACION.Detalle ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARCONSERVACION
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMCONSERVACION(idLogin,Detalle,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARCONSERVACION
@IDCONSERVACION INT,
@IDLogin INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMCONSERVACION
SET idLogin = @IDLogin, Estado = @ESTADO ,Detalle = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idConservacion = @IDCONSERVACION
END
GO

--PROCEDURES DOCUMENTO

GO
CREATE PROCEDURE SP_SEL_LISTARDOCUMENTO
AS
BEGIN
SELECT PDMDOCUMENTO.idDocumento as 'Codigo',PDMDOCUMENTO.Detalle AS 'Documento',(CASE PDMDOCUMENTO.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMDOCUMENTO ORDER BY PDMDOCUMENTO.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerDocumento
@Detalle varchar(300)
AS
BEGIN
SELECT PDMDOCUMENTO.idDocumento as 'Codigo',PDMDOCUMENTO.Detalle AS 'Documento',(CASE PDMDOCUMENTO.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMDOCUMENTO
where  PDMDOCUMENTO.Detalle LIKE  @Detalle + '%' ORDER BY PDMDOCUMENTO.Detalle ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARDOCUMENTO
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO Datetime,
@FECHAMODIFICACION Datetime
AS
BEGIN
INSERT INTO PDMDOCUMENTO(idLogin,Detalle,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARDOCUMENTO
@IDDOCUMENTO INT,
@IDLogin INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION Datetime
AS
BEGIN
UPDATE PDMDOCUMENTO
SET idLogin = @IDLogin, Estado = @ESTADO ,Detalle = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idDocumento = @IDDOCUMENTO
END
GO

--PROCEDURES GRUPO GENERICO

GO
CREATE PROCEDURE SP_SEL_LISTARGRUPOGENERICO
AS
BEGIN
SELECT PDMGRUPOGENERICO.idGrupoGenerico as 'ID',PDMGRUPOGENERICO.Codigo as 'Codigo',PDMGRUPOGENERICO.Detalle AS 'Grupo Generico',(CASE PDMGRUPOGENERICO.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMGRUPOGENERICO ORDER BY PDMGRUPOGENERICO.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerGrupoGenerico
@Detalle varchar(300)
AS
BEGIN
SELECT PDMGRUPOGENERICO.idGrupoGenerico as 'ID',PDMGRUPOGENERICO.Codigo as 'Codigo',PDMGRUPOGENERICO.Detalle AS 'Grupo Generico',(CASE PDMGRUPOGENERICO.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMGRUPOGENERICO
where  PDMGRUPOGENERICO.Detalle LIKE  @Detalle + '%' or PDMGRUPOGENERICO.Codigo LIKE @DETALLE + '%' ORDER BY PDMGRUPOGENERICO.Detalle ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARGRUPOGENERICO
@IDLOGIN INT,
@CODIGO VARCHAR(300),
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO DATETIME,
@FECHAMODIFICACION DATETIME
AS
BEGIN
INSERT INTO PDMGRUPOGENERICO(idLogin,Codigo,Detalle,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@CODIGO,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARGRUPOGENERICO
@IDGRUPOGENERICO INT,
@IDLogin INT,
@CODIGO VARCHAR(300),
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION DATETIME
AS
BEGIN
UPDATE PDMGRUPOGENERICO
SET idLogin = @IDLogin, Estado = @ESTADO ,Codigo=@CODIGO, Detalle = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idGrupoGenerico = @IDGRUPOGENERICO
END
GO

--PROCEDURES CAJA

GO
CREATE PROCEDURE SP_SEL_LISTARCAJA
AS
BEGIN
SELECT PDMCAJA.idCaja as 'Codigo',PDMCAJA.Detalle AS 'Caja',(CASE PDMCAJA.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMCAJA ORDER BY PDMCAJA.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerCaja
@Detalle varchar(300)
AS
BEGIN
SELECT PDMCAJA.idCaja as 'Codigo',PDMCAJA.Detalle AS 'Caja',(CASE PDMCAJA.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMCAJA
where  PDMCAJA.Detalle LIKE  @Detalle + '%' ORDER BY PDMCAJA.Detalle ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARCAJA
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO DATETIME,
@FECHAMODIFICACION DATETIME
AS
BEGIN
INSERT INTO PDMCAJA(idLogin,Detalle,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARCAJA
@IDCAJA INT,
@IDLogin INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION DATETIME
AS
BEGIN
UPDATE PDMCAJA
SET idLogin = @IDLogin, Estado = @ESTADO ,Detalle = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idCaja = @IDCAJA
END
GO

--PROCEDURES NIVEL DE ESTADO

GO
CREATE PROCEDURE SP_SEL_LISTARNIVELESTADO
AS
BEGIN
SELECT PDMNIVELESTADO.idNivelEstado as 'Codigo',PDMNIVELESTADO.Detalle AS 'Nivel de Estado',(CASE PDMNIVELESTADO.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMNIVELESTADO ORDER BY PDMNIVELESTADO.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerNivelEstado
@Detalle varchar(300)
AS
BEGIN
SELECT PDMNIVELESTADO.idNivelEstado as 'Codigo',PDMNIVELESTADO.Detalle AS 'Nivel de Estado',(CASE PDMNIVELESTADO.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMNIVELESTADO
where  PDMNIVELESTADO.Detalle LIKE  @Detalle + '%' ORDER BY PDMNIVELESTADO.Detalle ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARNIVELESTADO
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO DATETIME,
@FECHAMODIFICACION DATETIME
AS
BEGIN
INSERT INTO PDMNIVELESTADO(idLogin,Detalle,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARNIVELESTADO
@IDNIVELESTADO INT,
@IDLogin INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION DATETIME
AS
BEGIN
UPDATE PDMNIVELESTADO
SET idLogin = @IDLogin, Estado = @ESTADO ,Detalle = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idNivelEstado = @IDNIVELESTADO
END
GO

--PROCEDURES FORMA DE ADQUISICION

GO
CREATE PROCEDURE SP_SEL_LISTARFORMAADQUISICION
AS
BEGIN
SELECT PDMFORMAADQUISICION.idFormaAdquisicion as 'Codigo',PDMFORMAADQUISICION.Detalle AS 'Forma de Adquisicion',(CASE PDMFORMAADQUISICION.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMFORMAADQUISICION ORDER BY PDMFORMAADQUISICION.Detalle ASC
END
GO

GO
CREATE PROCEDURE SP_SEL_ObtenerFormaAdquisicion
@Detalle varchar(300)
AS
BEGIN
SELECT PDMFORMAADQUISICION.idFormaAdquisicion as 'Codigo',PDMFORMAADQUISICION.Detalle AS 'Forma de Adquisicion',(CASE PDMFORMAADQUISICION.Estado
         WHEN 1 THEN 'ACTIVO'  
         WHEN 0 THEN 'INACTIVO'          
         ELSE 'X'  
      END ) Estado FROM PDMFORMAADQUISICION
where  PDMFORMAADQUISICION.Detalle LIKE  @Detalle + '%' ORDER BY PDMFORMAADQUISICION.Detalle ASC
end
GO

GO
CREATE PROCEDURE SP_SEL_INSERTARFORMAADQUISICION
@IDLOGIN INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAINGRESO DATETIME,
@FECHAMODIFICACION DATETIME
AS
BEGIN
INSERT INTO PDMFORMAADQUISICION(idLogin,Detalle,Estado,FechaIngreso,FechaModificacion) VALUES (@IDLOGIN,@DETALLE,@ESTADO,@FECHAINGRESO,@FECHAMODIFICACION)
END
GO

GO
CREATE PROCEDURE SP_SEL_ACTUALIZARFORMAADQUISICION
@FORMAADQUISICION INT,
@IDLogin INT,
@DETALLE VARCHAR(300),
@ESTADO INT,
@FECHAMODIFICACION DATETIME
AS
BEGIN
UPDATE PDMFORMAADQUISICION
SET idLogin = @IDLogin, Estado = @ESTADO ,Detalle = @DETALLE, FechaModificacion = @FECHAMODIFICACION
WHERE idFormaAdquisicion = @FORMAADQUISICION
END
GO
